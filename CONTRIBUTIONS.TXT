Evan Hirsh:

Andrew Giannone:
- Researched common methods of malware distribution as well as ways of circumventing antivirus detection. 
- Created the phishing email and document that are sent to a target, as well as the visual basic macro that downloads and automatically runs the hosted executable. 
- Obfuscated the visual basic macro contained in the document to avoid detection by a majority of tested antivirsuses. 
- Researched and developed a proof of concept for decrypting the user's files by injecting code into the Game Theory process using Pyrasite.
- Created a distributable Virtual Machine image with the target version of Windows and Microsoft Office installed for use in testing, and helped test the malware as it was developed
- Worked alongside the other members of the team to write and develop the report and readme

Aidan Rubenstein:
- Created and contributed to the project report in all major sections.
- Researched the ethical limitations of the project according to the ACM Code of Ethics.
- Analyzed the malware in its working state on a test machine to look at possible workarounds for an anti-malware solution.
- Researched prior work in the field of ransomware to identify weaknesses in either encryption/decryption schemas
- Organized team discussions and project deliverables as it pertained to phase submissions and code implementation

Evan Hirsh:
- Designed the command line interface, countermeasures to prevent malicious spread, and basic user flow
- Implemented the basic AES protocols, key generation, and and wrapper to allow for easy encryption
- Reconstructed an open source python game into a class based module, allowing it to be dynamically loaded post encryption and implementing audio files
- Created a continuous delivery system for our repository which automatically linted our code, checked our latex file for errors, and compiled the executable
- Proofread and edited the project report for each iteration, updating information on the project's design as it changed
